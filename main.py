import telebot
from telebot import types
import webbrowser
from telebot.types import InlineKeyboardButton
import requests
import json
import yt_dlp
import os
from dotenv import load_dotenv
from currency_converter import CurrencyConverter

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ü–ï–†–í–´–ú –¥–µ–ª–æ–º
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–∏ –∏–∑ .env
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
YOUTUBE_API_KEY = os.getenv('YOUTUBE_API_KEY')
WEATHER_API = os.getenv('WEATHER_API')
EXCHANGE_API_KEY = os.getenv('EXCHANGE_API_KEY')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–ª—é—á–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
if not TELEGRAM_BOT_TOKEN:
    raise ValueError("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –ü–ï–†–ï–î –≤—Å–µ–º–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º–∏
bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)

# –¢–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
from currency_converter import CurrencyConverter

user_states = {}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if EXCHANGE_API_KEY:
    url = f"https://v6.exchangerate-api.com/v6/{EXCHANGE_API_KEY}/latest/USD"
    response = requests.get(url)
    data = response.json()
#–ë–ª–æ–∫ –∫–æ–º–∞–Ω–¥ —Å–æ —Å–ª–µ—à–∞–º–∏(/),
@bot.message_handler(commands=['site', 'website', 'web'])
def site(message):
    webbrowser.open('https://ru.freepik.com')

@bot.message_handler(commands=['start', 'main', 'hello'])
def main(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton('–ö–∞—Ç–∞–ª–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π')
    markup.row(btn1)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}, —ç—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã', reply_markup=markup)
    bot.register_next_step_handler(message, click)



def click(message):
    if message.text == '–ö–∞—Ç–∞–ª–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π':
        bot.register_next_step_handler(message, click)
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('üåê–ù–∞ —Å–∞–π—Ç', url='https://google.com')
        btn2 = types.InlineKeyboardButton('ü§ñChat-gpt', url='https://chat-gpt.org/chat')
        btn3 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç', callback_data='edit')
        markup.row(btn1, btn2, btn3)
        btn4 = types.InlineKeyboardButton('üîÜ–ü–æ–≥–æ–¥–∞', callback_data='weather')
        btn5 = types.InlineKeyboardButton('üß† –ù–µ–π—Ä–æ—Å–µ—Ç—å', callback_data='neural_network')# –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
        btn6 = types.InlineKeyboardButton('üí∏–í–∞–ª—é—Ç–∞', callback_data='money')
        markup.row(btn4, btn5, btn6)
        btn_music_search = types.InlineKeyboardButton('üîç –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏', callback_data='music_search')  # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
        markup.add(btn_music_search)
        btn7 = types.InlineKeyboardButton('üé∂–ë–µ–∑–º—è—Ç–µ–∂–Ω–æ—Å—Ç—å.exe', callback_data='muzz')
        markup.add(btn7)
        btn8 = types.InlineKeyboardButton('üé∂Fantasy Mixtape', callback_data='muz')
        markup.add(btn8)
        btn_cancel = types.InlineKeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="cancel_catalog")
        markup.add(btn_cancel)
        bot.reply_to(message, '–ö–∞—Ç–∞–ª–æ–≥:', reply_markup=markup)


@bot.message_handler(commands=['help'])
def main(message):
    bot.send_message(message.chat.id, '<b>Help-information</b>', parse_mode='html')

#–ë–ª–æ–∫ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –±–µ–∑ —Å–ª–µ—à–æ–≤
@bot.message_handler()
def info(message):
      if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
          bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}')
      elif message.text.lower() == 'id':
          bot.reply_to(message, f'ID: {message.from_user.id}')
      elif message.text.lower() == 'ghbdtn':
          bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}')
      elif message.text.lower() == '–≤–ª–∞–¥–µ–ª–µ—Ü':
          bot.reply_to(message, f'@blessed000000:')
      elif message.text.lower() == '—Å–æ—Å–∞–ª?':
          bot.reply_to(message, f'–¥–∞')


@bot.message_handler(content_types=['photo', 'video', 'audio', 'voice'])
def get_photo(message):

    # –∫–Ω–æ–ø–∫–∞ –≤–æ–∑–ª–µ —Å–∞–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π—è

    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url='https://google.com')
    markup.row(btn1)
    btn2 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ', callback_data='delete')
    btn3 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç', callback_data='edit')
    markup.row(btn2, btn3)
    bot.reply_to(message, '–ö–∞–∫–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ', reply_markup=markup)



@bot.callback_query_handler(func=lambda callback: callback.data == 'return_to_catalog')
def return_to_catalog(callback):
    print("–û–±—Ä–∞–±–æ—Ç—á–∏–∫ return_to_catalog –≤—ã–∑–≤–∞–Ω")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if callback.message.chat.id in user_states:
        del user_states[callback.message.chat.id]

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton('–ö–∞—Ç–∞–ª–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π')
    markup.row(btn1)
    bot.send_message(callback.message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=markup)
    bot.register_next_step_handler(callback.message, click)
# –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback
@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == 'delete':
        bot.delete_message(callback.message.chat.id, callback.message.message_id -1)
    elif callback.data == 'edit':
        bot.edit_message_text('Edit text', callback.message.chat.id, callback.message.message_id)
    elif callback.data == 'weather':
        handle_weather_callback(callback)
    elif callback.data == "cancel_weather":
        cancel_weather(callback)
    elif callback.data == 'money':
        handle_money_callback(callback)
    elif callback.data == 'music_search':
        handle_music_search(callback)
    elif callback.data == "cancel_music_search":
        cancel_music_search(callback)
    elif callback.data.startswith('convert_'):
        handle_currency_selection(callback)
    elif callback.data == 'next_currency':
        handle_money_callback(callback)
    elif callback.data == 'finish_conversion':
        finish_conversion(callback)
    elif callback.data == 'muzz':
        file1 = open('./skrip/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - —É–ª—ã–±–∫–∞ (2).mp3', 'rb')
        file2 = open('./skrip/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - fast furious (2).mp3', 'rb')
        file3 = open('./skrip/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç, –∫—É—Ö–Ω—è - —ç—Å–º–µ—Ä–∞–ª—å–¥–∞ (2).mp3', 'rb')
        file4 = open('./skrip/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç, T-Fest - 1, 2 (2).mp3', 'rb')
        file5 = open('./skrip/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - —Ç–∞–º –≥–¥–µ –Ω–µ –∂–¥–∞–ª–∏.mp3', 'rb')
        file6 = open('./skrip/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - cold as ice.mp3', 'rb')
        file7 = open('./skrip/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - 8ballin (2).mp3', 'rb')
        file8 = open('./skrip/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - –ª–æ—à–∞–¥–∫–∞ (2).mp3', 'rb')
        file9 = open('./skrip/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - –Ω–µ–∑–∞—á–µ–º –±–æ–ª–µ—Ç—å (2).mp3', 'rb')
        file10 = open('./skrip/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - —è–∫ 4 (2).mp3', 'rb')
        file11 = open('./skrip/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - —Ç—É–º–∞–Ω (2).mp3', 'rb')
        file12 = open('./skrip/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç,_TAY√ñKA_–Ω–∏—á–µ–≥–æ_–Ω–µ_—Å–¥–µ–ª–∞–µ—à—å (2).mp3', 'rb')
        file13 = open('./skrip/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ (2).mp3', 'rb')
        file14 = open('./skrip/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç,_–¥–∞–µ–Ω–∞,_Miyagi_–≠–Ω–¥—à–ø–∏–ª—å_–º–µ–≥–∞–ø–æ–ª–∏—Å (2).mp3', 'rb')
        file15 = open('./skrip/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç -  –∂–¥–∏ –º–µ–Ω—è (2).mp3', 'rb')
        file16 = open('./skrip./https___images.genius.com_c17dcc4af7619fb61acd2b55f1729c00.999x999x1.png', 'rb')
        bot.send_photo(callback.message.chat.id, file16)
        bot.send_audio(callback.message.chat.id, file1)
        bot.send_audio(callback.message.chat.id, file2)
        bot.send_audio(callback.message.chat.id, file3)
        bot.send_audio(callback.message.chat.id, file4)
        bot.send_audio(callback.message.chat.id, file5)
        bot.send_audio(callback.message.chat.id, file6)
        bot.send_audio(callback.message.chat.id, file7)
        bot.send_audio(callback.message.chat.id, file8)
        bot.send_audio(callback.message.chat.id, file9)
        bot.send_audio(callback.message.chat.id, file10)
        bot.send_audio(callback.message.chat.id, file11)
        bot.send_audio(callback.message.chat.id, file12)
        bot.send_audio(callback.message.chat.id, file13)
        bot.send_audio(callback.message.chat.id, file14)
        bot.send_audio(callback.message.chat.id, file15)
    elif callback.data == 'muz':
        file1 = open('./skripF/https___images.genius.com_8b3ac1f13e79d3ed0fe4f99c82f33175.1000x1000x1.png', 'rb')
        file2 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - –ê–≤–∞–Ω—Å.mp3', 'rb')
        file3 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç_qurt_Caro_–°—É–º–∫–∞_Remix_Remix.mp3', 'rb')
        file4 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç_Malcolm_Ku_–í–µ—Å–µ–ª–µ–π_Remix_Remix.mp3', 'rb')
        file5 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç_LOVV66_–ú–Ω–µ_–ø–æ—Ö—É–π_Remix_Remix.mp3', 'rb')
        file6 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç_FRIENDLY_T_–ù–µ–∫–æ–≥–¥–∞_–º–µ—á—Ç–∞—Ç—å.mp3', 'rb')
        file7 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç_blandee_M_Obnovylle_Remix_Remix.mp3', 'rb')
        file8 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç  –°–ª–æ–≤–µ—Ç—Å–∫–∏–π - –õ–µ–≥–∞–ª.mp3', 'rb')
        file9 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç  –ù–ï–î–†–´ - –ö–∞–∫ —É –∑–≤–µ–∑–¥—ã.mp3', 'rb')
        file10 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç  –∫—É—Ö–Ω—è - –ü—Ä–∏—Ü–µ–ª.mp3', 'rb')
        file11 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç  –ö—Ä–∏–ø-–∞-–ö—Ä–∏–ø - –ë–æ–Ω–≥.mp3', 'rb')
        file12 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç  Ulukmanapo - –î–æ –∫–æ–Ω—Ü–∞.mp3', 'rb')
        file13 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç  tsb - –ù–µ –≤—ã–≤–∏—Ö–Ω–∏ —à–µ—é.mp3', 'rb')
        file14 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç  TAYKA - –ö–æ–≤—Ä—ã.mp3', 'rb')
        file15 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç  OG Buda - –ó–∏—Ç–∞ –∏ –ì–∏—Ç–∞.mp3', 'rb')
        file16 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç  Kali  Malc... - –ï–π –Ω—Ä–∞–≤–∏—Ç—Å—è.mp3', 'rb')
        file17 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç  Kali - Tonight (Remix) (Remix).mp3', 'rb')
        file18 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç  GDO - –õ—É—Ö–∞—Ä–∏.mp3', 'rb')
        file19 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç  BULLYWO - –ß–∏—Å—Ç—ã–π (Remix) (Remix).mp3', 'rb')
        file20 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç  Beni Milordo - Allo-Allo.mp3', 'rb')
        file21 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - 223 (Solo Version) (So.mp3', 'rb')
        file22 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - –•–æ–ª–æ–¥–Ω–æ.mp3', 'rb')
        file23 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - –¢–æ—Å—Ç.mp3', 'rb')
        file24 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - –¢–∞—Ç—É—Ö–∏.mp3', 'rb')
        file25 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - –ó–∞—Ç—è–∂–∫–∞.mp3', 'rb')
        file26 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - –ñ–∏–∑–Ω—å –Ω–µ —Å–∞—Ö–∞—Ä (Solo V.mp3', 'rb')
        file27 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - –ì–∞—Å—Ç—Ä–æ–ª–∏.mp3', 'rb')
        file28 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - –ë—É–¥—å—Ç–µ –∑–¥–æ—Ä–æ–≤—ã (2023 R.mp3', 'rb')
        file29 = open('./skripF/–°–∫—Ä–∏–ø—Ç–æ–Ω–∏—Ç - Bad Vision (Solo Versi.mp3', 'rb')
        bot.send_photo(callback.message.chat.id, file1)
        bot.send_audio(callback.message.chat.id, file2)
        bot.send_audio(callback.message.chat.id, file3)
        bot.send_audio(callback.message.chat.id, file4)
        bot.send_audio(callback.message.chat.id, file5)
        bot.send_audio(callback.message.chat.id, file6)
        bot.send_audio(callback.message.chat.id, file7)
        bot.send_audio(callback.message.chat.id, file8)
        bot.send_audio(callback.message.chat.id, file9)
        bot.send_audio(callback.message.chat.id, file10)
        bot.send_audio(callback.message.chat.id, file11)
        bot.send_audio(callback.message.chat.id, file12)
        bot.send_audio(callback.message.chat.id, file13)
        bot.send_audio(callback.message.chat.id, file14)
        bot.send_audio(callback.message.chat.id, file15)
        bot.send_audio(callback.message.chat.id, file16)
        bot.send_audio(callback.message.chat.id, file17)
        bot.send_audio(callback.message.chat.id, file18)
        bot.send_audio(callback.message.chat.id, file19)
        bot.send_audio(callback.message.chat.id, file20)
        bot.send_audio(callback.message.chat.id, file21)
        bot.send_audio(callback.message.chat.id, file22)
        bot.send_audio(callback.message.chat.id, file23)
        bot.send_audio(callback.message.chat.id, file24)
        bot.send_audio(callback.message.chat.id, file25)
        bot.send_audio(callback.message.chat.id, file26)
        bot.send_audio(callback.message.chat.id, file27)
        bot.send_audio(callback.message.chat.id, file28)
        bot.send_audio(callback.message.chat.id, file29)
    elif callback.data == "cancel_catalog":
        bot.send_message(callback.message.chat.id, "–ö–∞—Ç–∞–ª–æ–≥ –∑–∞–∫—Ä—ã—Ç.")
        bot.edit_message_reply_markup(callback.message.chat.id, callback.message.message_id, reply_markup=None)


# –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏
def handle_music_search(callback):
    user_states[callback.message.chat.id] = "music_search"
    markup = types.InlineKeyboardMarkup()
    btn_cancel = types.InlineKeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∏—Å–∫ –º—É–∑—ã–∫–∏", callback_data="cancel_music_search")
    markup.add(btn_cancel)
    bot.send_message(callback.message.chat.id,
                     "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: 'Shape of You - Ed Sheeran'):",
                     reply_markup=markup)
    bot.register_next_step_handler(callback.message, process_music_search)


def process_music_search(message):
    if user_states.get(message.chat.id) != "music_search":
        return

    if not message.text or message.text.strip() == "":
        bot.reply_to(message, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏.")
        bot.register_next_step_handler(message, process_music_search)
        return

    query = message.text.strip() + " official audio"

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø–æ–∏—Å–∫–∞
    bot.send_chat_action(message.chat.id, 'typing')

    try:
        search_url = f"https://www.googleapis.com/youtube/v3/search?part=snippet&q={query}&type=video&key={YOUTUBE_API_KEY}&maxResults=1"
        res = requests.get(search_url, timeout=10)

        if res.status_code != 200 or not res.json().get('items'):
            bot.reply_to(message, "‚ùå –¢—Ä–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å.")
            bot.register_next_step_handler(message, process_music_search)
            return

        video_id = res.json()['items'][0]['id']['videoId']
        video_url = f"https://www.youtube.com/watch?v={video_id}"

        # –£–ª—É—á—à–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ yt-dlp —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º–∞—É—Ç–∞–º–∏
        ydl_opts = {
            'format': 'bestaudio/best',
            'outtmpl': 'track.%(ext)s',
            'postprocessors': [{
                'key': 'FFmpegExtractAudio',
                'preferredcodec': 'mp3',
                'preferredquality': '192',
            }],
            'socket_timeout': 30,
            'retries': 10,
            'fragment_retries': 10,
            'extract_flat': False,
            'http_chunk_size': 10485760,  # 10MB chunks
        }

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        bot.send_chat_action(message.chat.id, 'upload_audio')
        msg = bot.reply_to(message, "‚è¨ –°–∫–∞—á–∏–≤–∞—é —Ç—Ä–µ–∫...")

        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            ydl.download([video_url])

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—É–¥–∏–æ
        with open('track.mp3', 'rb') as audio_file:
            bot.send_audio(message.chat.id, audio_file, title=message.text)

        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if os.path.exists('track.mp3'):
            os.remove('track.mp3')

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏
        bot.delete_message(message.chat.id, msg.message_id)

    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {str(e)}"
        print(f"–û—à–∏–±–∫–∞: {e}")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
        bot.reply_to(message, error_msg)

    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫
    markup = types.InlineKeyboardMarkup()
    btn_cancel = types.InlineKeyboardButton("‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∏—Å–∫", callback_data="cancel_music_search")
    markup.add(btn_cancel)

    bot.reply_to(message, "üéµ –í–≤–µ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –ø–æ–∏—Å–∫:", reply_markup=markup)
    bot.register_next_step_handler(message, process_music_search)


def cancel_music_search(callback):
    user_states.pop(callback.message.chat.id, None)
    bot.send_message(callback.message.chat.id, "–ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏ –∑–∞–≤–µ—Ä—à—ë–Ω.")
    bot.edit_message_reply_markup(callback.message.chat.id, callback.message.message_id, reply_markup=None)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton('–ö–∞—Ç–∞–ª–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π')
    markup.row(btn1)
    bot.send_message(callback.message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=markup)
    bot.register_next_step_handler(callback.message, click)
def handle_weather_callback(callback):
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ "weather"
    user_states[callback.message.chat.id] = "weather"

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ–≥–æ–¥—ã"
    markup = types.InlineKeyboardMarkup()
    btn_cancel = types.InlineKeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ–≥–æ–¥—ã", callback_data="cancel_weather")
    markup.add(btn_cancel)

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≥–æ—Ä–æ–¥
    bot.send_message(callback.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:", reply_markup=markup)

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ—Ä–æ–¥–∞
    bot.register_next_step_handler(callback.message, process_weather)
def process_weather(message):
    if user_states.get(message.chat.id) != "weather":
        return  # –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ "weather", –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

    city = message.text.strip().lower()
    res = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API}&units=metric')

    if res.status_code != 200:
        bot.reply_to(message, "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        bot.register_next_step_handler(message, process_weather)
        return

    data = json.loads(res.text)
    temp = data["main"]["temp"]

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ–≥–æ–¥—ã"
    markup = types.InlineKeyboardMarkup()
    btn_cancel = types.InlineKeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ–≥–æ–¥—ã", callback_data="cancel_weather")
    markup.add(btn_cancel)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–≥–æ–¥–æ–π –∏ –∫–Ω–æ–ø–∫–æ–π
    img = '‚òÄÔ∏è' if temp > 10.0 else 'üå§' if temp > 0.0 else 'üå•' if temp > -10.0 else '‚ùÑÔ∏è'
    bot.reply_to(message, f'–°–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞: {temp} {img}', reply_markup=markup)

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ–≥–æ –≥–æ—Ä–æ–¥–∞
    bot.register_next_step_handler(message, process_weather)
def cancel_weather(callback):
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_states.pop(callback.message.chat.id, None)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    bot.send_message(callback.message.chat.id, "–ü–æ–∏—Å–∫ –ø–æ–≥–æ–¥—ã –∑–∞–≤–µ—Ä—à—ë–Ω.")

        # –£–¥–∞–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ–≥–æ–¥—ã"
    bot.edit_message_reply_markup(callback.message.chat.id, callback.message.message_id, reply_markup=None)
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton('–ö–∞—Ç–∞–ª–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π')
    markup.row(btn1)
    bot.send_message(callback.message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=markup)
    bot.register_next_step_handler(callback.message, click)
def get_exchange_rate(base_currency, target_currency):
    url = f"https://v6.exchangerate-api.com/v6/{EXCHANGE_API_KEY}/pair/{base_currency}/{target_currency}"
    response = requests.get(url)
    data = response.json()
    if response.status_code == 200 and data.get('result') == 'success':
        return data.get('conversion_rate')
    else:
        return None
def handle_money_callback(callback):
    user_states[callback.message.chat.id] = "money"
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('USD/EUR', callback_data='convert_USD_EUR')
    btn2 = types.InlineKeyboardButton('EUR/USD', callback_data='convert_EUR_USD')
    btn3 = types.InlineKeyboardButton('RUB/SOM', callback_data='convert_RUB_KGS')
    btn4 = types.InlineKeyboardButton('SOM/RUB', callback_data='convert_KGS_RUB')
    btn5 = types.InlineKeyboardButton('üí∞–î—Ä—É–≥–∞—è –≤–∞–ª—é—Ç–∞', callback_data='convert_else')
    markup.add(btn1, btn2, btn3, btn4, btn5)
    btn_cancel = types.InlineKeyboardButton("üìõ–ó–∞–≤–µ—Ä—à–∏—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é", callback_data="cancel_money")
    markup.add(btn_cancel)
    bot.send_message(callback.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä—É –≤–∞–ª—é—Ç:", reply_markup=markup)
def handle_currency_selection(callback):
    if callback.data == 'convert_else':
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–æ–¥ –ø–∞—Ä—ã –≤–∞–ª—é—Ç
        bot.send_message(callback.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä—É –≤–∞–ª—é—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ USD/EUR:")
        bot.register_next_step_handler(callback.message, process_custom_currency_pair)
    elif '_' in callback.data:
        currency_pair = callback.data.split('_')[1:]  # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä—É –≤–∞–ª—é—Ç
        user_states[callback.message.chat.id] = {'currency_pair': currency_pair}
        bot.send_message(callback.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:")
        bot.register_next_step_handler(callback.message, process_amount)
    else:
        bot.send_message(callback.message.chat.id, "–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã.")
def process_custom_currency_pair(message):
    try:
        # –†–∞–∑–¥–µ–ª—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –Ω–∞ –¥–≤–µ –≤–∞–ª—é—Ç—ã
        base_currency, target_currency = message.text.strip().upper().split('/')
        user_states[message.chat.id] = {'currency_pair': [base_currency, target_currency]}
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:")
        bot.register_next_step_handler(message, process_amount)
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä—É –≤–∞–ª—é—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ USD/EUR.")
        bot.register_next_step_handler(message, process_custom_currency_pair)
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Å—É–º–º—ã
def process_amount(message):
    try:
        amount = float(message.text)
        chat_id = message.chat.id
        if chat_id in user_states:
            currency_pair = user_states[chat_id]['currency_pair']
            base_currency = currency_pair[0]
            target_currency = currency_pair[1]
            rate = get_exchange_rate(base_currency, target_currency)
            if rate is not None:
                converted_amount = amount * rate
                markup = types.InlineKeyboardMarkup()
                btn1 = types.InlineKeyboardButton('üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥—É—é –≤–∞–ª—é—Ç—É', callback_data='next_currency')
                btn2 = types.InlineKeyboardButton('‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data='finish_conversion')
                markup.add(btn1, btn2)
                bot.send_message(chat_id, f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {amount} {base_currency} = {converted_amount:.2f} {target_currency}", reply_markup=markup)
            else:
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç
                markup = types.InlineKeyboardMarkup()
                btn_return = types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥', callback_data='return_to_catalog')
                markup.add(btn_return)
                bot.send_message(chat_id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=markup)
    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")
def finish_conversion(callback):
    if callback.message.chat.id in user_states:
        del user_states[callback.message.chat.id]
    bot.send_message(callback.message.chat.id, "–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
    return_to_catalog(callback.message)  # –ü–µ—Ä–µ–¥–∞–µ–º callback.message –≤–º–µ—Å—Ç–æ callback
def cancel_catalog(callback):
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_states.pop(callback.message.chat.id, None)
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    bot.send_message(callback.message.chat.id, "–ö–∞—Ç–∞–ª–æ–≥ –∑–∞–∫—Ä—ã—Ç.")

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton('–ö–∞—Ç–∞–ª–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π')
    markup.row(btn1)
    bot.send_message(callback.message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=markup)
    bot.register_next_step_handler(callback.message, click)







bot.infinity_polling(timeout=30)
